{"ast":null,"code":"var _jsxFileName = \"G:\\\\strweb4\\\\lab4\\\\client\\\\src\\\\components\\\\Weather.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherComponent = () => {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Токен API (поместите сюда свой токен)\n  const API_TOKEN = \"56b30cb255.3443075\";\n  const BASE_URL = \"https://api.gismeteo.net/v2/weather/current/\";\n\n  // ID географического объекта\n  const LOCATION_ID = \"4368\"; // Пример: ID города\n\n  // Выполняем запрос к API при загрузке компонента\n  useEffect(() => {\n    const fetchWeather = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(`${BASE_URL}${LOCATION_ID}/`, {\n          headers: {\n            \"X-Gismeteo-Token\": API_TOKEN,\n            \"Accept-Encoding\": \"gzip\"\n          },\n          params: {\n            lang: \"ru\" // Язык ответа\n          }\n        });\n        setWeatherData(response.data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchWeather();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Current Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 14\n        }, this), \" \", weatherData.description.full]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Temperature:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 14\n        }, this), \" \", weatherData.temperature.air.C, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Humidity:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 14\n        }, this), \" \", weatherData.humidity.percent, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Pressure:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 14\n        }, this), \" \", weatherData.pressure.mm_hg_atm, \" mmHg\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Wind Speed:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 14\n        }, this), \" \", weatherData.wind.speed.m_s, \" m/s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Cloudiness:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 14\n        }, this), \" \", weatherData.cloudiness.percent, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherComponent, \"5D/vak42bx6E1PZA6agARYhQL9Q=\");\n_c = WeatherComponent;\nexport default WeatherComponent;\nvar _c;\n$RefreshReg$(_c, \"WeatherComponent\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","WeatherComponent","_s","weatherData","setWeatherData","loading","setLoading","error","setError","API_TOKEN","BASE_URL","LOCATION_ID","fetchWeather","response","get","headers","params","lang","data","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","description","full","temperature","air","C","humidity","percent","pressure","mm_hg_atm","wind","speed","m_s","cloudiness","_c","$RefreshReg$"],"sources":["G:/strweb4/lab4/client/src/components/Weather.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst WeatherComponent = () => {\r\n  const [weatherData, setWeatherData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Токен API (поместите сюда свой токен)\r\n  const API_TOKEN = \"56b30cb255.3443075\";\r\n  const BASE_URL = \"https://api.gismeteo.net/v2/weather/current/\";\r\n\r\n  // ID географического объекта\r\n  const LOCATION_ID = \"4368\"; // Пример: ID города\r\n\r\n  // Выполняем запрос к API при загрузке компонента\r\n  useEffect(() => {\r\n    const fetchWeather = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await axios.get(`${BASE_URL}${LOCATION_ID}/`, {\r\n          headers: {\r\n            \"X-Gismeteo-Token\": API_TOKEN,\r\n            \"Accept-Encoding\": \"gzip\",\r\n          },\r\n          params: {\r\n            lang: \"ru\", // Язык ответа\r\n          },\r\n        });\r\n        setWeatherData(response.data);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchWeather();\r\n  }, []);\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>Error: {error}</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h2>Current Weather</h2>\r\n      {weatherData && (\r\n        <div>\r\n          <p><strong>Description:</strong> {weatherData.description.full}</p>\r\n          <p><strong>Temperature:</strong> {weatherData.temperature.air.C}°C</p>\r\n          <p><strong>Humidity:</strong> {weatherData.humidity.percent}%</p>\r\n          <p><strong>Pressure:</strong> {weatherData.pressure.mm_hg_atm} mmHg</p>\r\n          <p><strong>Wind Speed:</strong> {weatherData.wind.speed.m_s} m/s</p>\r\n          <p><strong>Cloudiness:</strong> {weatherData.cloudiness.percent}%</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}