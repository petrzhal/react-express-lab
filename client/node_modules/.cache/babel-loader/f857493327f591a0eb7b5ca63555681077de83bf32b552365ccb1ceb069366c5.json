{"ast":null,"code":"var _jsxFileName = \"G:\\\\strweb4\\\\lab4\\\\client\\\\src\\\\components\\\\EditExhibition.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditExhibition = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Получаем параметр из URL\n  const navigate = useNavigate();\n  const [exhibition, setExhibition] = useState({\n    title: '',\n    description: ''\n  });\n  const [isEditing, setIsEditing] = useState(false);\n  useEffect(() => {\n    if (id !== 'new') {\n      // Если это не новая выставка, загружаем данные для редактирования\n      const fetchExhibition = async () => {\n        const response = await fetch(`http://localhost:5000/api/exhibitions/${id}`);\n        if (response.ok) {\n          const data = await response.json();\n          setExhibition(data);\n          setIsEditing(true);\n        }\n      };\n      fetchExhibition();\n    }\n  }, [id]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setExhibition(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const method = isEditing ? 'PUT' : 'POST';\n    const url = isEditing ? `http://localhost:5000/api/exhibitions/${id}` : 'http://localhost:5000/api/exhibitions';\n    try {\n      const response = await fetch(url, {\n        method,\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(exhibition)\n      });\n      if (response.ok) {\n        navigate('/exhibitions'); // Перенаправление после успешного сохранения\n      } else {\n        throw new Error('Failed to save exhibition');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isEditing ? `Edit Exhibition: ${exhibition.title}` : 'Add New Exhibition'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          value: exhibition.title,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"description\",\n          value: exhibition.description,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isEditing ? 'Save Changes' : 'Add Exhibition'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(EditExhibition, \"BbtSBBmX0zxPOChF4TAVCPV9dOk=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditExhibition;\nexport default EditExhibition;\nvar _c;\n$RefreshReg$(_c, \"EditExhibition\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","jsxDEV","_jsxDEV","EditExhibition","_s","id","navigate","exhibition","setExhibition","title","description","isEditing","setIsEditing","fetchExhibition","response","fetch","ok","data","json","handleChange","e","name","value","target","prev","handleSubmit","preventDefault","method","url","headers","body","JSON","stringify","Error","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","_c","$RefreshReg$"],"sources":["G:/strweb4/lab4/client/src/components/EditExhibition.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\n\r\nconst EditExhibition = () => {\r\n  const { id } = useParams(); // Получаем параметр из URL\r\n  const navigate = useNavigate();\r\n  const [exhibition, setExhibition] = useState({ title: '', description: '' });\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (id !== 'new') {\r\n      // Если это не новая выставка, загружаем данные для редактирования\r\n      const fetchExhibition = async () => {\r\n        const response = await fetch(`http://localhost:5000/api/exhibitions/${id}`);\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setExhibition(data);\r\n          setIsEditing(true);\r\n        }\r\n      };\r\n      fetchExhibition();\r\n    }\r\n  }, [id]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setExhibition((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const method = isEditing ? 'PUT' : 'POST';\r\n    const url = isEditing \r\n      ? `http://localhost:5000/api/exhibitions/${id}` \r\n      : 'http://localhost:5000/api/exhibitions';\r\n\r\n    try {\r\n      const response = await fetch(url, {\r\n        method,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(exhibition),\r\n      });\r\n\r\n      if (response.ok) {\r\n        navigate('/exhibitions'); // Перенаправление после успешного сохранения\r\n      } else {\r\n        throw new Error('Failed to save exhibition');\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>{isEditing ? `Edit Exhibition: ${exhibition.title}` : 'Add New Exhibition'}</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Title:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            value={exhibition.title}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Description:</label>\r\n          <textarea\r\n            name=\"description\"\r\n            value={exhibition.description}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\">{isEditing ? 'Save Changes' : 'Add Exhibition'}</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditExhibition;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}