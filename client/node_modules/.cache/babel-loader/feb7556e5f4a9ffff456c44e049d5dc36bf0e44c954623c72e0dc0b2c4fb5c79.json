{"ast":null,"code":"var _jsxFileName = \"G:\\\\strweb4\\\\lab4\\\\client\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport ExhibitCard from '..components/ExhibitCard.js'; // Импортируйте ExhibitCard\nimport './Home.css'; // Импортируйте стили для главной страницы\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [exhibits, setExhibits] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const fetchExhibits = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/exhibits');\n      if (!response.ok) {\n        throw new Error('Не удалось загрузить экспонаты');\n      }\n      const data = await response.json();\n      setExhibits(data); // Сохраните данные в состоянии\n    } catch (error) {\n      setError(error.message); // Установите сообщение об ошибке\n    } finally {\n      setLoading(false); // Установите загрузку в false после завершения\n    }\n  };\n  useEffect(() => {\n    fetchExhibits(); // Вызовите функцию загрузки данных при загрузке компонента\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }, this); // Показать индикатор загрузки\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 16\n    }, this); // Показать ошибку, если она возникла\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0414\\u043E\\u0431\\u0440\\u043E \\u043F\\u043E\\u0436\\u0430\\u043B\\u043E\\u0432\\u0430\\u0442\\u044C \\u0432 \\u043C\\u0443\\u0437\\u0435\\u0439\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u041E\\u0442\\u043A\\u0440\\u043E\\u0439\\u0442\\u0435 \\u043C\\u0438\\u0440 \\u0438\\u0441\\u0442\\u043E\\u0440\\u0438\\u0438 \\u0438 \\u043A\\u0443\\u043B\\u044C\\u0442\\u0443\\u0440\\u044B.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exhibit-cards-container\",\n      children: exhibits.map(exhibit => /*#__PURE__*/_jsxDEV(ExhibitCard, {\n        exhibit: exhibit\n      }, exhibit._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this) // Отобразить карточки для каждого экспоната\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"QmCXe8Y42rO42NAlMeusQ+GfacY=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","ExhibitCard","jsxDEV","_jsxDEV","Home","_s","exhibits","setExhibits","loading","setLoading","error","setError","fetchExhibits","response","fetch","ok","Error","data","json","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","exhibit","_id","_c","$RefreshReg$"],"sources":["G:/strweb4/lab4/client/src/pages/Home.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport ExhibitCard from '..components/ExhibitCard.js'; // Импортируйте ExhibitCard\r\nimport './Home.css'; // Импортируйте стили для главной страницы\r\n\r\nconst Home = () => {\r\n    const [exhibits, setExhibits] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    const fetchExhibits = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:5000/api/exhibits');\r\n            if (!response.ok) {\r\n                throw new Error('Не удалось загрузить экспонаты');\r\n            }\r\n            const data = await response.json();\r\n            setExhibits(data); // Сохраните данные в состоянии\r\n        } catch (error) {\r\n            setError(error.message); // Установите сообщение об ошибке\r\n        } finally {\r\n            setLoading(false); // Установите загрузку в false после завершения\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchExhibits(); // Вызовите функцию загрузки данных при загрузке компонента\r\n    }, []);\r\n\r\n    if (loading) {\r\n        return <div className=\"loading\">Загрузка...</div>; // Показать индикатор загрузки\r\n    }\r\n\r\n    if (error) {\r\n        return <div className=\"error\">Ошибка: {error}</div>; // Показать ошибку, если она возникла\r\n    }\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            <h2>Добро пожаловать в музей</h2>\r\n            <p>Откройте мир истории и культуры.</p>\r\n            <div className=\"exhibit-cards-container\">\r\n                {exhibits.map((exhibit) => (\r\n                    <ExhibitCard key={exhibit._id} exhibit={exhibit} /> // Отобразить карточки для каждого экспоната\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,6BAA6B,CAAC,CAAC;AACvD,OAAO,YAAY,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMY,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,CAAC;MAClE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,gCAAgC,CAAC;MACrD;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCX,WAAW,CAACU,IAAI,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,OAAOP,KAAK,EAAE;MACZC,QAAQ,CAACD,KAAK,CAACS,OAAO,CAAC,CAAC,CAAC;IAC7B,CAAC,SAAS;MACNV,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACvB;EACJ,CAAC;EAEDV,SAAS,CAAC,MAAM;IACZa,aAAa,CAAC,CAAC,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIJ,OAAO,EAAE;IACT,oBAAOL,OAAA;MAAKiB,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EACvD;EAEA,IAAIf,KAAK,EAAE;IACP,oBAAOP,OAAA;MAAKiB,SAAS,EAAC,OAAO;MAAAC,QAAA,GAAC,wCAAQ,EAACX,KAAK;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,CAAC,CAAC;EACzD;EAEA,oBACItB,OAAA;IAAKiB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACjBlB,OAAA;MAAAkB,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjCtB,OAAA;MAAAkB,QAAA,EAAG;IAAgC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACvCtB,OAAA;MAAKiB,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EACnCf,QAAQ,CAACoB,GAAG,CAAEC,OAAO,iBAClBxB,OAAA,CAACF,WAAW;QAAmB0B,OAAO,EAAEA;MAAQ,GAA9BA,OAAO,CAACC,GAAG;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqB,CAAC,CAAC;MACvD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACpB,EAAA,CA3CID,IAAI;AAAAyB,EAAA,GAAJzB,IAAI;AA6CV,eAAeA,IAAI;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}