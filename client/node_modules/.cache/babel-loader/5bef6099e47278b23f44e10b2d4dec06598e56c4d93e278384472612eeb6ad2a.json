{"ast":null,"code":"var _jsxFileName = \"G:\\\\strweb4\\\\lab4\\\\client\\\\src\\\\components\\\\EditExhibition.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditExhibition = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Получение ID из URL\n  const navigate = useNavigate();\n  const [exhibition, setExhibition] = useState({\n    title: '',\n    description: '',\n    startDate: '',\n    endDate: '',\n    isActive: true\n  });\n  const [loading, setLoading] = useState(!!id); // Загрузка данных только при редактировании\n  const [error, setError] = useState(null);\n\n  // Проверка авторизации\n  const token = localStorage.getItem('jwt');\n  const isAuthorized = !!token;\n\n  // Загрузка данных выставки при редактировании\n  useEffect(() => {\n    if (id) {\n      const fetchExhibition = async () => {\n        try {\n          const response = await fetch(`http://localhost:5000/api/exhibitions/${id}`);\n          if (!response.ok) {\n            throw new Error('Failed to fetch exhibition');\n          }\n          const data = await response.json();\n          setExhibition(data);\n        } catch (error) {\n          setError(error.message);\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchExhibition();\n    }\n  }, [id]);\n\n  // Обработка отправки формы\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const method = id ? 'PUT' : 'POST';\n      const url = id ? `http://localhost:5000/api/exhibitions/${id}` : 'http://localhost:5000/api/exhibitions';\n      const response = await fetch(url, {\n        method,\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(exhibition)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to save exhibition');\n      }\n      navigate('/exhibitions'); // Переход к списку выставок\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  if (!isAuthorized) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"You are not authorized to access this page.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }, this);\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: id ? `Edit Exhibition: ${exhibition.title}` : 'Add Exhibition'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: exhibition.title,\n          onChange: e => setExhibition({\n            ...exhibition,\n            title: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: exhibition.description,\n          onChange: e => setExhibition({\n            ...exhibition,\n            description: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Start Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: exhibition.startDate,\n          onChange: e => setExhibition({\n            ...exhibition,\n            startDate: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"End Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: exhibition.endDate,\n          onChange: e => setExhibition({\n            ...exhibition,\n            endDate: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Active:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: exhibition.isActive,\n          onChange: e => setExhibition({\n            ...exhibition,\n            isActive: e.target.checked\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: id ? 'Update Exhibition' : 'Create Exhibition'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(EditExhibition, \"hA433lANUBZeElhl8NcRKLB+/o4=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditExhibition;\nexport default EditExhibition;\nvar _c;\n$RefreshReg$(_c, \"EditExhibition\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","jsxDEV","_jsxDEV","EditExhibition","_s","id","navigate","exhibition","setExhibition","title","description","startDate","endDate","isActive","loading","setLoading","error","setError","token","localStorage","getItem","isAuthorized","fetchExhibition","response","fetch","ok","Error","data","json","message","handleSubmit","event","preventDefault","method","url","headers","Authorization","body","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","e","target","required","checked","_c","$RefreshReg$"],"sources":["G:/strweb4/lab4/client/src/components/EditExhibition.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\n\r\nconst EditExhibition = () => {\r\n  const { id } = useParams(); // Получение ID из URL\r\n  const navigate = useNavigate();\r\n  const [exhibition, setExhibition] = useState({\r\n    title: '',\r\n    description: '',\r\n    startDate: '',\r\n    endDate: '',\r\n    isActive: true,\r\n  });\r\n  const [loading, setLoading] = useState(!!id); // Загрузка данных только при редактировании\r\n  const [error, setError] = useState(null);\r\n\r\n  // Проверка авторизации\r\n  const token = localStorage.getItem('jwt');\r\n  const isAuthorized = !!token;\r\n\r\n  // Загрузка данных выставки при редактировании\r\n  useEffect(() => {\r\n    if (id) {\r\n      const fetchExhibition = async () => {\r\n        try {\r\n          const response = await fetch(`http://localhost:5000/api/exhibitions/${id}`);\r\n          if (!response.ok) {\r\n            throw new Error('Failed to fetch exhibition');\r\n          }\r\n          const data = await response.json();\r\n          setExhibition(data);\r\n        } catch (error) {\r\n          setError(error.message);\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n\r\n      fetchExhibition();\r\n    }\r\n  }, [id]);\r\n\r\n  // Обработка отправки формы\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const method = id ? 'PUT' : 'POST';\r\n      const url = id\r\n        ? `http://localhost:5000/api/exhibitions/${id}`\r\n        : 'http://localhost:5000/api/exhibitions';\r\n      const response = await fetch(url, {\r\n        method,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify(exhibition),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to save exhibition');\r\n      }\r\n\r\n      navigate('/exhibitions'); // Переход к списку выставок\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  if (!isAuthorized) {\r\n    return <div>You are not authorized to access this page.</div>;\r\n  }\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Error: {error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>{id ? `Edit Exhibition: ${exhibition.title}` : 'Add Exhibition'}</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          Title:\r\n          <input\r\n            type=\"text\"\r\n            value={exhibition.title}\r\n            onChange={(e) => setExhibition({ ...exhibition, title: e.target.value })}\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Description:\r\n          <textarea\r\n            value={exhibition.description}\r\n            onChange={(e) => setExhibition({ ...exhibition, description: e.target.value })}\r\n          />\r\n        </label>\r\n        <label>\r\n          Start Date:\r\n          <input\r\n            type=\"date\"\r\n            value={exhibition.startDate}\r\n            onChange={(e) => setExhibition({ ...exhibition, startDate: e.target.value })}\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          End Date:\r\n          <input\r\n            type=\"date\"\r\n            value={exhibition.endDate}\r\n            onChange={(e) => setExhibition({ ...exhibition, endDate: e.target.value })}\r\n          />\r\n        </label>\r\n        <label>\r\n          Active:\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={exhibition.isActive}\r\n            onChange={(e) => setExhibition({ ...exhibition, isActive: e.target.checked })}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">{id ? 'Update Exhibition' : 'Create Exhibition'}</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditExhibition;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}